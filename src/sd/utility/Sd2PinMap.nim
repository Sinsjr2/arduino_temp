##  Arduino SdFat Library
##    Copyright (C) 2010 by William Greiman
##
##    This file is part of the Arduino SdFat Library
##
##    This Library is free software: you can redistribute it and/or modify
##    it under the terms of the GNU General Public License as published by
##    the Free Software Foundation, either version 3 of the License, or
##    (at your option) any later version.
##
##    This Library is distributed in the hope that it will be useful,
##    but WITHOUT ANY WARRANTY; without even the implied warranty of
##    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
##    GNU General Public License for more details.
##
##    You should have received a copy of the GNU General Public License
##    along with the Arduino SdFat Library.  If not, see
##    <http://www.gnu.org/licenses/>.
##

when defined(arm):         ##  Arduino Due Board follows
  var SS_PIN* {.importcpp: "SS_PIN", header: "Sd2PinMap.h".}: uint8
  var MOSI_PIN* {.importcpp: "MOSI_PIN", header: "Sd2PinMap.h".}: uint8
  var MISO_PIN* {.importcpp: "MISO_PIN", header: "Sd2PinMap.h".}: uint8
  var SCK_PIN* {.importcpp: "SCK_PIN", header: "Sd2PinMap.h".}: uint8
elif defined(AVR_ATmega4809): ##  Arduino UNO WiFI Rev2 follows
  var SS_PIN* {.importcpp: "SS_PIN", header: "Sd2PinMap.h".}: uint8
  var MOSI_PIN* {.importcpp: "MOSI_PIN", header: "Sd2PinMap.h".}: uint8
  var MISO_PIN* {.importcpp: "MISO_PIN", header: "Sd2PinMap.h".}: uint8
  var SCK_PIN* {.importcpp: "SCK_PIN", header: "Sd2PinMap.h".}: uint8
elif defined(AVR):         ##  Other AVR based Boards follows
  ##  Warning this file was generated by a program.
  ## ------------------------------------------------------------------------------
  ## * struct for mapping digital pins
  type
    pin_map_t* {.importcpp: "pin_map_t", header: "Sd2PinMap.h", bycopy.} = object
      ddr* {.importc: "ddr".}: ptr uint8
      pin* {.importc: "pin".}: ptr uint8
      port* {.importc: "port".}: ptr uint8
      bit* {.importc: "bit".}: uint8

  ## ------------------------------------------------------------------------------
  when defined(AVR_ATmega1280) or defined(AVR_ATmega2560):
    ##  Mega
    ##  Two Wire (aka I2C) ports
    var SDA_PIN* {.importcpp: "SDA_PIN", header: "Sd2PinMap.h".}: uint8
    var SCL_PIN* {.importcpp: "SCL_PIN", header: "Sd2PinMap.h".}: uint8
    ##  SPI port
    var SS_PIN* {.importcpp: "SS_PIN", header: "Sd2PinMap.h".}: uint8
    var MOSI_PIN* {.importcpp: "MOSI_PIN", header: "Sd2PinMap.h".}: uint8
    var MISO_PIN* {.importcpp: "MISO_PIN", header: "Sd2PinMap.h".}: uint8
    var SCK_PIN* {.importcpp: "SCK_PIN", header: "Sd2PinMap.h".}: uint8
    var digitalPinMap* {.importcpp: "digitalPinMap", header: "Sd2PinMap.h".}: UncheckedArray[
        pin_map_t]
    ## ------------------------------------------------------------------------------
  elif (defined(AVR_ATmega644P) or defined(AVR_ATmega1284P)) and
      defined(CORE_MICRODUINO):
    ##  Microduino Core+
    ##  Two Wire (aka I2C) ports
    var SDA_PIN* {.importcpp: "SDA_PIN", header: "Sd2PinMap.h".}: uint8
    var SCL_PIN* {.importcpp: "SCL_PIN", header: "Sd2PinMap.h".}: uint8
    ##  SPI port
    var SS_PIN* {.importcpp: "SS_PIN", header: "Sd2PinMap.h".}: uint8
    var MOSI_PIN* {.importcpp: "MOSI_PIN", header: "Sd2PinMap.h".}: uint8
    var MISO_PIN* {.importcpp: "MISO_PIN", header: "Sd2PinMap.h".}: uint8
    var SCK_PIN* {.importcpp: "SCK_PIN", header: "Sd2PinMap.h".}: uint8
    var digitalPinMap* {.importcpp: "digitalPinMap", header: "Sd2PinMap.h".}: UncheckedArray[
        pin_map_t]
    ## ------------------------------------------------------------------------------
  elif defined(AVR_ATmega128RFA1) and defined(CORE_MICRODUINO):
    ##  Microduino Core RF
    ##  Two Wire (aka I2C) ports
    var SDA_PIN* {.importcpp: "SDA_PIN", header: "Sd2PinMap.h".}: uint8
    var SCL_PIN* {.importcpp: "SCL_PIN", header: "Sd2PinMap.h".}: uint8
    ##  SPI port
    var SS_PIN* {.importcpp: "SS_PIN", header: "Sd2PinMap.h".}: uint8
    var MOSI_PIN* {.importcpp: "MOSI_PIN", header: "Sd2PinMap.h".}: uint8
    var MISO_PIN* {.importcpp: "MISO_PIN", header: "Sd2PinMap.h".}: uint8
    var SCK_PIN* {.importcpp: "SCK_PIN", header: "Sd2PinMap.h".}: uint8
    var digitalPinMap* {.importcpp: "digitalPinMap", header: "Sd2PinMap.h".}: UncheckedArray[
        pin_map_t]
    ## ------------------------------------------------------------------------------
  elif defined(AVR_ATmega32U4) and defined(CORE_MICRODUINO):
    ##  Microduino Core USB
    ##  Two Wire (aka I2C) ports
    var SDA_PIN* {.importcpp: "SDA_PIN", header: "Sd2PinMap.h".}: uint8
    var SCL_PIN* {.importcpp: "SCL_PIN", header: "Sd2PinMap.h".}: uint8
    ##  SPI port
    var SS_PIN* {.importcpp: "SS_PIN", header: "Sd2PinMap.h".}: uint8
    var MOSI_PIN* {.importcpp: "MOSI_PIN", header: "Sd2PinMap.h".}: uint8
    var MISO_PIN* {.importcpp: "MISO_PIN", header: "Sd2PinMap.h".}: uint8
    var SCK_PIN* {.importcpp: "SCK_PIN", header: "Sd2PinMap.h".}: uint8
    var digitalPinMap* {.importcpp: "digitalPinMap", header: "Sd2PinMap.h".}: UncheckedArray[
        pin_map_t]
    ## ------------------------------------------------------------------------------
  elif defined(AVR_ATmega644P) or defined(AVR_ATmega644):
    ##  Sanguino
    ##  Two Wire (aka I2C) ports
    var SDA_PIN* {.importcpp: "SDA_PIN", header: "Sd2PinMap.h".}: uint8
    var SCL_PIN* {.importcpp: "SCL_PIN", header: "Sd2PinMap.h".}: uint8
    ##  SPI port
    var SS_PIN* {.importcpp: "SS_PIN", header: "Sd2PinMap.h".}: uint8
    var MOSI_PIN* {.importcpp: "MOSI_PIN", header: "Sd2PinMap.h".}: uint8
    var MISO_PIN* {.importcpp: "MISO_PIN", header: "Sd2PinMap.h".}: uint8
    var SCK_PIN* {.importcpp: "SCK_PIN", header: "Sd2PinMap.h".}: uint8
    var digitalPinMap* {.importcpp: "digitalPinMap", header: "Sd2PinMap.h".}: UncheckedArray[
        pin_map_t]
    ## ------------------------------------------------------------------------------
  elif defined(AVR_ATmega32U4):
    ##  Leonardo
    ##  Two Wire (aka I2C) ports
    var SDA_PIN* {.importcpp: "SDA_PIN", header: "Sd2PinMap.h".}: uint8
    var SCL_PIN* {.importcpp: "SCL_PIN", header: "Sd2PinMap.h".}: uint8
    ##  SPI port
    var SS_PIN* {.importcpp: "SS_PIN", header: "Sd2PinMap.h".}: uint8
    var MOSI_PIN* {.importcpp: "MOSI_PIN", header: "Sd2PinMap.h".}: uint8
    var MISO_PIN* {.importcpp: "MISO_PIN", header: "Sd2PinMap.h".}: uint8
    var SCK_PIN* {.importcpp: "SCK_PIN", header: "Sd2PinMap.h".}: uint8
    var digitalPinMap* {.importcpp: "digitalPinMap", header: "Sd2PinMap.h".}: UncheckedArray[
        pin_map_t]
    ## ------------------------------------------------------------------------------
  elif defined(AVR_AT90USB646) or defined(AVR_AT90USB1286):
    ##  Teensy++ 1.0 & 2.0
    ##  Two Wire (aka I2C) ports
    var SDA_PIN* {.importcpp: "SDA_PIN", header: "Sd2PinMap.h".}: uint8
    var SCL_PIN* {.importcpp: "SCL_PIN", header: "Sd2PinMap.h".}: uint8
    ##  SPI port
    var SS_PIN* {.importcpp: "SS_PIN", header: "Sd2PinMap.h".}: uint8
    var MOSI_PIN* {.importcpp: "MOSI_PIN", header: "Sd2PinMap.h".}: uint8
    var MISO_PIN* {.importcpp: "MISO_PIN", header: "Sd2PinMap.h".}: uint8
    var SCK_PIN* {.importcpp: "SCK_PIN", header: "Sd2PinMap.h".}: uint8
    var digitalPinMap* {.importcpp: "digitalPinMap", header: "Sd2PinMap.h".}: UncheckedArray[
        pin_map_t]
    ## ------------------------------------------------------------------------------
  else:
    ##  Two Wire (aka I2C) ports
    var SDA_PIN* {.importcpp: "SDA_PIN", header: "Sd2PinMap.h".}: uint8
    var SCL_PIN* {.importcpp: "SCL_PIN", header: "Sd2PinMap.h".}: uint8
    ##  SPI port
    var SS_PIN* {.importcpp: "SS_PIN", header: "Sd2PinMap.h".}: uint8
    var MOSI_PIN* {.importcpp: "MOSI_PIN", header: "Sd2PinMap.h".}: uint8
    var MISO_PIN* {.importcpp: "MISO_PIN", header: "Sd2PinMap.h".}: uint8
    var SCK_PIN* {.importcpp: "SCK_PIN", header: "Sd2PinMap.h".}: uint8
    # var digitalPinMap* {.importcpp: "digitalPinMap", header: "Sd2PinMap.h".}: UncheckedArray[pin_map_t]

  var digitalPinCount* {.importcpp: "digitalPinCount", header: "Sd2PinMap.h".}: uint8
  proc badPinNumber*(): uint8 {.importcpp: "badPinNumber(@)", header: "Sd2PinMap.h".}
  proc getPinMode*(pin: uint8): uint8 =
    discard

  proc setPinMode*(pin: uint8; mode: uint8) =
    discard

  proc fastDigitalRead*(pin: uint8): uint8 =
    discard

  proc fastDigitalWrite*(pin: uint8; value: uint8) =
    discard

elif defined(CPU_ARC):
  when defined(ARDUINO_ARC):
    ##  Two Wire (aka I2C) ports
    var SDA_PIN* {.importcpp: "SDA_PIN", header: "Sd2PinMap.h".}: uint8
    var SCL_PIN* {.importcpp: "SCL_PIN", header: "Sd2PinMap.h".}: uint8
    ##  SPI port
    var SS_PIN* {.importcpp: "SS_PIN", header: "Sd2PinMap.h".}: uint8
    var MOSI_PIN* {.importcpp: "MOSI_PIN", header: "Sd2PinMap.h".}: uint8
    var MISO_PIN* {.importcpp: "MISO_PIN", header: "Sd2PinMap.h".}: uint8
    var SCK_PIN* {.importcpp: "SCK_PIN", header: "Sd2PinMap.h".}: uint8

